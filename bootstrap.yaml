---
- hosts: localhost
  become: false
  gather_facts: true
  connection: local
  vars:
    dev_uri: "https://developers.redhat.com/content-gateway/rest/mirror2/pub/openshift-v4/clients"
    mirror_uri: "https://mirror.openshift.com/pub/openshift-v4/x86_64/clients"
    ocp_maj_ver: "4.11"   # Overridden in the packer build
    ocp_min_ver: "4.11.8" # Overridden in the packer build
    ocp_max_ver: "4.11.8" # Overridden in the packer build
    quay_root: /opt/quay
    reg_user: "init"
    reg_pass: "openshift"
    oc_mirror_dir: "/opt/openshift/mirror"

  tasks:

    - name: Clean dnf cache
      become: true
      shell: dnf clean all

    - name: Update all packages
      become: true
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Install container-tools module
      become: true
      ansible.builtin.dnf:
        name: '@container-tools:rhel8'

    - name: Install other required packages
      become: true
      ansible.builtin.dnf:
        name:
          - git
          - vim
          - jq
          - tmux
          - bash-completion
          - mlocate
          - pigz

    - name: Pull OCP Dependencies
      become: true
      ansible.builtin.unarchive:
        src: "{{ item }}"
        dest: /usr/local/bin
        remote_src: true
      loop:
        - "{{ dev_uri }}/mirror-registry/latest/mirror-registry.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/openshift-install-linux-{{ ocp_max_ver }}.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/openshift-client-linux-{{ ocp_max_ver }}.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/oc-mirror.tar.gz"
        - "{{ mirror_uri }}/pipeline/latest/tkn-linux-amd64.tar.gz"

      # Separate task because this doesn't come as an archive
    - name: Download odo
      become: true
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /usr/local/bin/odo
        mode: '0755'
      loop:
        - "{{ dev_uri }}/odo/latest/odo-linux-amd64"

    - name: Create clients directory
      become: true
      file:
        path: /opt/openshift/clients
        state: directory
        owner: 'ec2-user'
        group: 'ec2-user'
        mode: 0755

    - name: Pull OCP Clients again but keep them as archives
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /opt/openshift/clients/
      loop:
        - "{{ dev_uri }}/mirror-registry/latest/mirror-registry.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/openshift-install-linux-{{ ocp_max_ver }}.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/openshift-client-linux-{{ ocp_max_ver }}.tar.gz"
        - "{{ mirror_uri }}/ocp/{{ ocp_max_ver }}/oc-mirror.tar.gz"
        - "{{ mirror_uri }}/pipeline/latest/tkn-linux-amd64.tar.gz"

    - name: Generate oc bash completion file
      ansible.builtin.shell:
        cmd: /usr/local/bin/oc completion bash > /etc/bash_completion.d/oc
        creates: /etc/bash_completion.d/oc
      become: true

    - name: Set permissions on oc bash completion file
      ansible.builtin.file:
        path: /etc/bash_completion.d/oc
        owner: root
        group: root
        mode: '0644'
        state: file
      become: true

    - name: Change file ownership, group and permissions
      become: true
      ansible.builtin.file:
        path: "/usr/local/bin/{{ item }}"
        owner: root
        group: root
        mode: 0755
        state: file
      loop:
        - openshift-install
        - oc
        - kubectl
        - oc-mirror
        - tkn
        - tkn-pac
        - odo
        - mirror-registry

    - name: Restore SELinux context
      become: true
      ansible.builtin.command: restorecon -v /usr/local/bin/{{ item }}
      loop:
        - openshift-install
        - oc
        - kubectl
        - oc-mirror
        - tkn
        - tkn-pac
        - odo
        - mirror-registry

    - name: Create quay directory
      become: true
      file:
        path: "{{ quay_root }}"
        state: directory

    - name: Create containers directory
      file:
        path: "{{ ansible_env.XDG_RUNTIME_DIR }}/containers"
        state: directory

    - name: Copy pull secret
      copy:
        src: "/tmp/pull-secret.txt"
        dest: "{{ ansible_env.XDG_RUNTIME_DIR }}/containers/auth.json"
        remote_src: true

    - name: Replace OCP_MAJ_VER with actual version number
      ansible.builtin.replace:
        path: /home/ec2-user/imageset-config.yaml
        regexp: OCP_MAJ_VER
        replace: "{{ ocp_maj_ver }}"

    - name: Replace OCP_MIN_VER with actual version number
      ansible.builtin.replace:
        path: /home/ec2-user/imageset-config.yaml
        regexp: OCP_MIN_VER
        replace: "{{ ocp_min_ver }}"

    - name: Replace OCP_MAX_VER with actual version number
      ansible.builtin.replace:
        path: /home/ec2-user/imageset-config.yaml
        regexp: OCP_MAX_VER
        replace: "{{ ocp_max_ver }}"

    - name: Create directory for oc-mirror images
      file:
        path: "{{ oc_mirror_dir }}"
        state: directory

    - name: Replace DATA_TMP with actual directory for mirror
      ansible.builtin.replace:
        path: /home/ec2-user/imageset-config.yaml
        regexp: DATA_TMP
        replace: "{{ oc_mirror_dir }}"

    - name: Touch file to block quay init script from launching until AMI reaches final location
      become: true
      ansible.builtin.file:
        path: /etc/sysconfig/rh-quay-firstboot
        state: touch
